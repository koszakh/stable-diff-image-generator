version: '3.8'

services:
  db:
    image: mysql:latest
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "$DB_ROOT_PASS"
      MYSQL_DATABASE: "$DB_NAME"
      MYSQL_USER: "$DB_USER"
      MYSQL_PASSWORD: "$DB_PASS"
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"

  web:
    build: .
    container_name: django_api
    restart: always
    depends_on:
      - db
      - rabbitmq
    environment:
      DB_NAME: "$DB_NAME"
      DB_USER: "$DB_USER"
      DB_PASS: "$DB_PASS"
      DB_HOST: "$DB_HOST"
      DB_PORT: "$DB_PORT"
      CELERY_BROKER_URL: amqp://guest@rabbitmq//
      PYTHONPATH: "/app/image_api"
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: >
      sh -c "python image_api/manage.py makemigrations &&
             python image_api/manage.py migrate &&
             python image_api/manage.py runserver 0.0.0.0:8000"

  worker:
    build: .
    container_name: celery_worker
    restart: always
    depends_on:
      - web
      - rabbitmq
    environment:
      DB_NAME: "$DB_NAME"
      DB_USER: "$DB_USER"
      DB_PASS: "$DB_PASS"
      DB_HOST: "$DB_HOST"
      DB_PORT: "$DB_PORT"
      CELERY_BROKER_URL: "$CELERY_BROKER_URL"
      CELERY_ACCEPT_CONTENT: "$CELERY_ACCEPT_CONTENT"
      CELERY_TASK_SERIALIZER: "$CELERY_TASK_SERIALIZER"
      CELERY_RESULT_BACKEND: "$CELERY_RESULT_BACKEND"
      CELERY_TIMEZONE: "UTC"
      PYTHONPATH: "/app/image_api"
    volumes:
      - .:/app
    command: celery -A image_api.celery_app worker --loglevel=info

volumes:
  mysql_data:

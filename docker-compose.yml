version: '3.8'

services:
  db:
    image: mysql:latest
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "$DB_ROOT_PASS"
      MYSQL_DATABASE: "$DB_NAME"
      MYSQL_USER: "$DB_USER"
      MYSQL_PASSWORD: "$DB_PASS"
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: "$RABBITMQ_USER"
      RABBITMQ_DEFAULT_PASS: "$RABBITMQ_PASSWORD"
    ports:
#      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  web:
    build: .
    container_name: django_api
    restart: always
    depends_on:
      - db
      - rabbitmq
    environment:
      DB_NAME: "$DB_NAME"
      DB_USER: "$DB_USER"
      DB_PASS: "$DB_PASS"
      DB_HOST: "$DB_HOST"
      DB_PORT: "$DB_PORT"
      CELERY_BROKER_URL: "$CELERY_BROKER_URL"
      DJANGO_SETTINGS_MODULE: image_api.settings
      PYTHONUNBUFFERED: 1
      DEBUG: ${DEBUG:-0}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
      PYTHONPATH: "/app/image_api"
#    ports:
#      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    command: >
      sh -c "python image_api/manage.py wait_for_db &&
             python image_api/manage.py migrate &&
             python image_api/manage.py collectstatic --noinput &&
             gunicorn image_api.wsgi:application --bind 0.0.0.0:8000"
    networks:
      - app-network

  worker:
    build: .
    container_name: celery_worker
    restart: always
    depends_on:
      - web
      - rabbitmq
    environment:
      DB_NAME: "$DB_NAME"
      DB_USER: "$DB_USER"
      DB_PASS: "$DB_PASS"
      DB_HOST: "$DB_HOST"
      DB_PORT: "$DB_PORT"
      CELERY_BROKER_URL: "$CELERY_BROKER_URL"
      CELERY_ACCEPT_CONTENT: "$CELERY_ACCEPT_CONTENT"
      CELERY_TASK_SERIALIZER: "$CELERY_TASK_SERIALIZER"
      CELERY_RESULT_BACKEND: "$CELERY_RESULT_BACKEND"
      CELERY_TIMEZONE: "UTC"
      DJANGO_SETTINGS_MODULE: image_api.settings
      PYTHONUNBUFFERED: 1
      PYTHONPATH: "/app/image_api"
    volumes:
      - .:/app
      - media_volume:/app/media
    command: celery -A image_api.celery_app worker --loglevel=info
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    restart: always
    depends_on:
      - web
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    networks:
      - app-network

volumes:
  mysql_data:
  static_volume:
  media_volume:

networks:
  app-network:
    driver: bridge